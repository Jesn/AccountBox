version: '3.8'

# ============================================
# AccountBox - MySQL Deployment
# ============================================
# MySQL 部署配置 - 前端和后端打包在一个镜像中
# 包含 MySQL 数据库和 phpMyAdmin 管理工具
#
# 启动方式:
#   docker-compose -f docker-compose.mysql.yml up -d
#
# 访问方式:
#   - 应用: http://localhost:5095
#   - API: http://localhost:5095/api
#   - Swagger: http://localhost:5095/swagger
#   - phpMyAdmin: http://localhost:8080
# ============================================

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: accountbox-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: accountbox
      MYSQL_USER: accountbox
      MYSQL_PASSWORD: accountbox123
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - accountbox-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "accountbox", "-paccountbox123"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # phpMyAdmin 数据库管理工具
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: accountbox-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: accountbox
      PMA_PASSWORD: accountbox123
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - accountbox-network

  # 应用服务 - 连接到 MySQL
  accountbox:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        VERSION: ${VERSION:-1.0.0}
    container_name: accountbox-app
    restart: unless-stopped
    ports:
      - "5095:5093"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB_PROVIDER=mysql
      - CONNECTION_STRING=Server=mysql;Port=3306;Database=accountbox;User=accountbox;Password=accountbox123
      - ASPNETCORE_URLS=http://+:5093
      - Authentication__MasterPassword=${MASTER_PASSWORD:-admin123}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - accountbox-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5093/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s

networks:
  accountbox-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
